@page "/profile"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Graph
@inject Microsoft.Graph.GraphServiceClient GraphServiceClient
@attribute [Authorize]

@if (user == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <section class="vh-75">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-md-12 col-xl-4">
                    <div class="card rz-shadow-3" style="border-radius: 10px; background-color: #F2F2F2;">
                        <div class="card-body text-center">
                            <div class="mt-3 mb-4">
                                <img src="@photo"
                                 class="rounded-circle img-fluid" style="width: 100px;" />
                            </div>
                            <h4 class="mb-2">@user.DisplayName</h4>
                            <p class="text-muted mb-4">
                                @user.UserPrincipalName
                            </p>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </section>
}

@code {
    User? user;
    string? photo = "images/profile.png";

    protected override async Task OnInitializedAsync()
    {
        Stream foto;
        try
        {
            user = await GraphServiceClient.Me.Request().GetAsync();
            foto = await GraphServiceClient.Me.Photo.Content.Request().GetAsync();
            if (foto != null)
            {
                MemoryStream ms = new MemoryStream();
                foto.CopyTo(ms);
                byte[] byteArray = ms.ToArray();
                var b64String = Convert.ToBase64String(byteArray);
                photo = "data:image/png;base64," + b64String;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
